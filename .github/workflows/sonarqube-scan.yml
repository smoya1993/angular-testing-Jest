name: CI Angular with Jest and SonarCloud

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del c칩digo del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar la versi칩n de Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Paso 3: Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Paso 4: Ejecutar pruebas con Jest
      - name: Run Jest tests with coverage
        run: npm run test:coverage

      # Paso 5: Configurar la versi칩n de Java (Java 17)
      - name: Setup Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # Paso 6: Compilar el proyecto Angular
      - name: Build project
        run: npm run build

      # Paso 7: Ejecutar an치lisis de SonarCloud y enviar cobertura
      - name: Run SonarCloud analysis
        run: |
          npx sonar-scanner \
            -Dsonar.projectKey=${{ env.SONAR_PROJECTKEY }} \
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONARCLOUD_TOKEN }} \
            -Dsonar.exclusions=node_modules/**,coverage/**,dist/** \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.c.file.suffixes=- \
            -Dsonar.cpp.file.suffixes=- \
            -Dsonar.objc.file.suffixes=-
        env:
          SONAR_PROJECTKEY: front-organization-1234-1
          SONAR_ORGANIZATION: front-organization-1234-1
